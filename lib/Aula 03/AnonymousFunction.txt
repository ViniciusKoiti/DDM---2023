O que é? 
  - Funções sem nome. 
  - Como não tem nome, não pode ser chamada.
  - Não pode ser executada em mais de um ponto.
  - Não pode ser reaproveitada.
Sintaxe? 
  - A mesma de uma função comum, porém sem o nome e sem a definição explícita do tipo de retorno.
Quando utilizamos? 
  - Geralmente para definir uma ação previamente desconhecida que não precisa ser reaproveitada.
  - Com a sintaxe mais enxuta, é mais rápido e fácil de implementar.
  - Conforme o contexto, ajuda na legibilidade do código.
Pré-requisito? 
  - Necessário ter uma função com o parâmetro do tipo função.

Exemplo:
    void main(List<String> arguments) {
    print('''
        Escolha uma opção: 
        (1) - verificar aprovação pela média;
        (2) - verificar aprovação pela maior nota; e
        (3) - verificar aprovação pela menor nota.
    ''');
    int escolha = int.parse(stdin.readLineSync()!);
    print('Informe a 1º nota:');
    double n1 = double.parse(stdin.readLineSync()!);
    print('Informe a 2º nota:');
    double n2 = double.parse(stdin.readLineSync()!);
    bool aprovado;
    if(escolha == 1){
        aprovado = verificarAprovacao(n1, n2, calcularMedia); 
    }else if(escolha == 2){
        aprovado = verificarAprovacao(n1, n2, (double nota1, double nota2){ 
        double maior = nota1;
        if(nota2 > nota1) maior = nota2;
        return maior;
        });
    } else {
        aprovado = verificarAprovacao(n1, n2, (){  //Aqui entra a função anônima, vc cria uma função genérica que vai ser passada para o parametro
        n1 = n1 * 2; // nota1 tem peso 2
        double media = (n1 + n2) / 3;
        return media;
        });
    }
    print( aprovado ? 'aprovado' : 'reprovado' );
    }

    bool verificarAprovacao(double nota1, double nota2, Function caclularNota){
        double nota = caclularNota(nota1,nota2);
        return (nota >= 6);